apply plugin: 'com.android.application'
apply plugin: 'jacoco'

def config = rootProject.ext.configuration;
def libs = rootProject.ext.libraries;

task jacocoTestReport(type: JacocoReport, dependsOn: 'testDebugUnitTest') {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
    def debugTree = fileTree(dir: "${buildDir}/intermediates/classes/debug", excludes: fileFilter)
    def mainSrc = "${project.projectDir}/src/main/java"

    sourceDirectories = files([mainSrc])
    classDirectories = files([debugTree])
    executionData = files("${buildDir}/jacoco/testDebugUnitTest.exec")
}

android {
    compileSdkVersion config.compileVersion
    defaultConfig {
        applicationId config.packageName
        minSdkVersion config.minSdk
        targetSdkVersion config.targetSdk
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            testCoverageEnabled true
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    output.versionNameOverride = "BuildType_Decorated{name=gitVersionNameFull, debuggable=false, testCoverageEnabled=false, jniDebuggable=false, pseudoLocalesEnabled=false, renderscriptDebuggable=false, renderscriptOptimLevel=3, minifyEnabled=false, zipAlignEnabled=true, signingConfig=null, embedMicroApp=true, mBuildConfigFields={}, mResValues={}, mProguardFiles=[], mConsumerProguardFiles=[], mManifestPlaceholders={}}"
                }
            }
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            applicationVariants.all { variant ->
                variant.outputs.all { output ->
                    def date = new Date().format("yyyy-MM-dd___(HH.mm.ss)")
                    outputFileName = outputFileName.replace("release", String.format("v%d(%s)___%s",
                            defaultConfig.versionCode, defaultConfig.versionName, date))
                }
            }
        }
    }
    testOptions {
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
    configurations.all {
        resolutionStrategy.force 'junit:junit:4.11'
    }
    useLibrary 'org.apache.http.legacy'
    flavorDimensions "color"
    productFlavors {
        dev {
            dimension "color"
        }
        prod {
            dimension "color"
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    //noinspection GradleCompatible
    implementation "com.android.support:appcompat-v7:${libs.supportVersion}"
    implementation 'com.android.support:support-v4:28.0.0'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.0'
    implementation 'com.google.code.gson:gson:2.8.2'
    implementation 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'org.apache.httpcomponents:httpcore:4.4.1'
    implementation "com.android.support:recyclerview-v7:25.3.0"
    implementation 'com.jakewharton:butterknife:7.0.1'
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'

    // Escape e unescape emoji
    implementation 'org.apache.commons:commons-lang3:3.4'

    // Http
    implementation('com.squareup.retrofit2:retrofit:2.1.0') {
        exclude module: 'okhttp'
    }
    implementation 'com.squareup.retrofit2:converter-gson:2.1.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.squareup.okhttp3:okhttp:3.4.1'
    implementation 'com.squareup.okhttp:mockwebserver:2.5.0'

    //Teste
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:3.0.2'
    androidTestImplementation('com.android.support.test:runner:1.0.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestImplementation 'com.android.support:support-annotations:23.2.0'

    implementation 'com.android.support:multidex:1.0.3'
}